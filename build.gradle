// Plugins
plugins {
    id 'java'
    id 'maven-publish'
    id 'net.minecrell.licenser' version "$licenser"
    id 'fabric-loom' version "$fabric_loom"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.dorongold.task-tree" version "1.5"
    id 'org.jetbrains.kotlin.jvm' version "$kotlin"
}

// Settings
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
group = "io.github.gunpowder"
version = "${project.mod_version}+gunpowder.${project.gunpowder}.mc.${project.minecraft}"
String jarpath = "${project.buildDir}/libs/${project.archivesBaseName}-${project.version}"

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// Shadow stuff
configurations {
    dev
    compile.extendsFrom shade
    modCompile.extendsFrom modShade
}


// Licenser
license {
    header = rootProject.file('LICENSE')
    include '**/*.java'
    include '**/*.kt'
    style.java = 'BLOCK_COMMENT'
    style.kt = 'BLOCK_COMMENT'
}

// Repositories
repositories {
    maven {
        name = "Gunpowder"
        url = "https://maven.martmists.com/releases"
    }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
}

// Dependencies
dependencies {
    // Minecraft
    minecraft "com.mojang:minecraft:${project.minecraft}"
    mappings "net.fabricmc:yarn:${project.minecraft}+build.${project.yarn_build}:v2"
    modImplementation "net.fabricmc:fabric-loader:$project.fabric_loader"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$project.fabric_api"

    // Gunpowder
    modApi "io.github.gunpowder:gunpowder-api:${project.gunpowder}+${project.minecraft}"

    // Database
    implementation "org.jetbrains.exposed:exposed-core:$project.exposed"
    implementation "org.jetbrains.exposed:exposed-java-time:$project.exposed"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$project.kotlin"
}


// Tasks
shadowJar {
    enabled = true
    // Only shadow implementation/modImplementation
    configurations = [project.configurations.shade]
    classifier = "dev"
}

task remapShadowJar(type: net.fabricmc.loom.task.RemapJarTask, dependsOn: shadowJar) {
    afterEvaluate {
        input = file("${jarpath}-dev.jar")
        archiveName = "${project.name}-${project.version}.jar"
        addNestedDependencies = true
        remapAccessWidener = true
    }
}

task remapMavenJar(type: net.fabricmc.loom.task.RemapJarTask, dependsOn: shadowJar) {
    afterEvaluate {
        input = file("${jarpath}-dev.jar")
        archiveName = "${project.name}-${project.version}-maven.jar"
        addNestedDependencies = false
        remapAccessWidener = true
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from project.sourceSets.main.allSource.srcDirs
}

remapJar {
    enabled = false
}

processResources {
    inputs.property "version", project.version
    inputs.property "gunpowder", project.gunpowder

    from(project.sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version, "gunpowder": project.gunpowder
    }

    from(project.sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

build.dependsOn(shadowJar, remapShadowJar)

publish.dependsOn(shadowJar, remapMavenJar, sourcesJar, remapSourcesJar)

if (file('secrets.gradle').exists()) {
    apply from: 'secrets.gradle'
    // project.ext.cfKey = cf token
    // project.ext.cfID = cf id
    // project.ext.mavenToken = maven token

    publishing {
        repositories {
            maven {
                url = "https://maven.martmists.com/releases"
                credentials {
                    username = 'admin'
                    password = project.mavenToken
                }
            }
        }

        publications {
            mavenJava(MavenPublication) {
                afterEvaluate {
                    artifact source: file("${jarpath}.jar"), classifier: ''
                    artifact source: file("${jarpath}-dev.jar"), classifier: 'dev'
                    artifact source: file("${jarpath}-sources.jar"), classifier: 'sources'
                    artifact source: file("${jarpath}-sources-dev.jar"), classifier: 'sources-dev'
                }
            }
        }
    }

    curseforge {
        apiKey = project.cfKey
        project {
            id = "${project.cfId}"
            releaseType = "release"
            changelogType = "markdown"
            changelog = file("CHANGELOG.md").readLines().join("\n").split("---")[0]
            addGameVersion project.minecraft
            addGameVersion "Fabric"
            addGameVersion "Java 8"

            mainArtifact file("${jarpath}.jar")

            afterEvaluate {
                uploadTask.dependsOn(remapShadowJar)
            }
        }
        options {
            forgeGradleIntegration = false
        }
    }
}
